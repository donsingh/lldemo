function insertNode(a){switch(a){case 0:$(".code-text").empty(),$(".subtitle").text("We are now going to insert a new node in the list!"),showCode("void insertNode(struct node **temp)<br>{");break;case 1:createPtr("temp"),$(".subtitle").html("First We Create Variable <code>temp</code>");break;case 2:$("#trav").prepend("<div class='arrow2'></div>"),$(".subtitle").html("<code>temp</code> will be given address of <code>head</code>"),$("#temp > .var").text("0x1AA"),$("#temp").append("<div class='arrow2'></div>");break;case 3:$(".subtitle").html("Is <code>temp</code> pointing to an empty pointer?<br><small>Empty pointers signify the end of the list</small>"),showCode("<br>&nbsp;&nbsp;&nbsp;while(*temp != NULL){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp = &(*temp)->next;<br>&nbsp;&nbsp;&nbsp;}"),moveTemp();break;case 4:$(".subtitle").html("Now that we know <code>temp</code> is at the end of the list..."),$(".code-text").children().removeClass("strong");break;case 5:$(".subtitle").html("Let's create a new node-type structure!"),createNode(nodes),createPtr("newNode"),$(".code-text").append("<br>&nbsp;&nbsp;&nbsp;<span class='strong'>struct node *newNode = (struct node*) malloc(sizeof(struct node));</span>");break;case 6:$(".subtitle").html("Give that new structure's data a value..."),showCode("<br>&nbsp;&nbsp;&nbsp;newNode->data = "+data[nodes]+";"),$("#node"+nodes).children(".data").children(".int").text(data[nodes]);break;case 7:$(".subtitle").html("Set this new struct's next to NULL (since it is the last!)"),showCode("<br>&nbsp;&nbsp;&nbsp;newNode->next = NULL"),$("#node"+nodes).children(".next").children(".var").text("NULL");break;case 8:$(".subtitle").html("Give the newly created structure's address to <code>head</code> using <code>temp</code>."),showCode("<br>&nbsp;&nbsp;&nbsp;*temp = newNode;");break;case 9:move();break;case 10:$(".subtitle").html("Done! Once we exit this function, the two dbl pointers will be free'd."),showCode("<br>}"),$("#newNode").remove(),$("#temp").remove();break;case 11:ctr=0}}function init(){nodes=0,$(".code-text").html(""),$(".subtitle").html("");var a="<div class='ptr' id='head'><div class='addr'>0x1AA</div><div class='var'></div><p>head</p></div>";$(".stage").html(a)}function createNode(a){var b="<div class='node' id='node"+(a+1)+"'>";b+="<span class='node_label'>0d0"+address[a].pad(2)+"</span>",b+="<div class='data'><div class='int'></div><span>data</span></div>",b+="<div class='ptr next'><div class='var'></div><p>next</p></div></div>",$(".stage").append(b),nodes++}function createPtr(a){var b="<div class='ptr' id='"+a+"'>";if(b+="<div class='var'></div><p>"+a+"</p></div>",$(".stage").append(b),"newNode"==a){$("#newNode").append("<div class='arrow2'></div>"),$("#newNode").children(".var").text("0d0"+address[nodes-1].pad(2));var c=$(".node").last().offset().left+60;$("#newNode").css("left",c)}}function showCode(a){$(".code-text").children().removeClass("strong"),$(".code-text").append("<span class='strong'>"+a+"</span>")}function move(){var a=$("#newNode").children(".var").offset().left+5,b=$("#newNode").children(".var").offset().top,c=$("#newNode").children(".var").text(),d="<div class='var' style='position:absolute; left:"+a+"px; top:"+b+"px;' id='galaw'>"+c+"</div>";$(".stage").append(d),1===nodes?(a=$("#head").children(".var").offset().left+5,b=$("#head").children(".var").offset().top):(a=$("#node"+(nodes-1)+" > .next").children(".var").offset().left+5,b=$("#node"+(nodes-1)+" > .next").children(".var").offset().top),$("#galaw").animate({left:a,top:b},2e3,function(){$("#galaw").remove(),1===nodes?($("#head").children(".var").text(c),$("#head").append("<div class='arrow'></div>")):($("#node"+(nodes-1)+" > .next").children(".var").text(c),$("#node"+(nodes-1)+" > .next").append("<div class='arrow'></div>"))})}function moveTemp(){if(0===nodes)return!1;var a=$(".node").last().children(".next").offset().left+5;$("#temp").animate({left:a},1e3);var b=address[nodes]-2;$("#temp .var").text("0d0"+b.pad(2)),$("#temp").children(".arrow2").animate({height:"45px",top:"-95%"})}var address=[0,8,16,24,32,40,48],data=[5,15,25,35,50,65],ctr=0,nodes=0;$(document).ready(function(){init(),$(".btn-primary").on("click",function(){$(".media").show()}),$(".btn-success").on("click",function(){5==nodes&&0===ctr?alert("Maximum size for this example is 5!"):insertNode(ctr++)}),$(".back").on("click",function(){init();var a=ctr-1;for(ctr=0;a-- >0;)insertNode(ctr++)})}),Number.prototype.pad=function(a){for(var b=String(this);b.length<(a||2);)b="0"+b;return b};